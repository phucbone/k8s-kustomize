apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
  template:
    spec:
      imagePullSecrets:
        - name: secret_pull
      nodeSelector:
        label: value
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: kibana-config
          secret:
            secretName: kibana-config
      containers:
        - name: kibana
          volumeMounts:
            - name: kibana-config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
          envFrom:
            - secretpRef:
                name: kibana-extra-env
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 200m
              memory: 500Mi
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
            exec:
              command:
                - sh
                - '-c'
                - >
                  #!/usr/bin/env bash -e
                  # Disable nss cache to avoid filling dentry cache when calling
                  curl
                  # This is required with Kibana Docker using nss < 3.52

                  export NSS_SDB_USE_CACHE=no

                  http () {
                      local path="${1}"
                      set -- -XGET -s --fail -L

                      if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                        set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                      fi

                      STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:5601${path}")
                      if [[ "${STATUS}" -eq 200 ]]; then
                        exit 0
                      fi

                      echo "Error: Got HTTP code ${STATUS} but expected a 200"
                      exit 1
                  }

                  http "/kibana/app/kibana"
